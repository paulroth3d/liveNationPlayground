<!--
/**
 * Test page for working with canvas apps.
 * @author Paul Roth <proth@salesforce.com>
 * /apex/LNE_TicketScaleImport
 **/
-->
<apex:page standardController="Event__c"
	sidebar="false" showHeader="false" standardStylesheets="false"
>
	<!-- PostMessage communicates between windows -->
    <apex:includeScript value="{!URLFOR($Resource.LNE_GeneralResources,"js/events/LNE_PostMessage2.js")}" />
    <!-- Used to simplify remoting calls -->
    <apex:includeScript value="{!URLFOR($Resource.LNE_GeneralResources,"js/remoting/RemotingHelper.js")}" />
    <!-- handles routing of PostMessages -->
    <apex:includeScript value="{!URLFOR($Resource.LNE_GeneralResources,"js/events/LNE_MessagePostOffice.js")}" />

    <!-- JQuery, not essential -->
    <apex:includeScript value="{!URLFOR($Resource.LNE_GeneralResources,"js/lib/jquery-min.js")}" />
    <!-- underscore, again not essential -->
    <apex:includeScript value="{!URLFOR($Resource.LNE_GeneralResources,"js/lib/underscore.js")}" />
    
    <!-- canvas api -->
    <!-- <script type="text/javascript" src="/canvas/sdk/js/39.0/canvas-all.js"></script> -->
    <script type="text/javascript" src="/canvas/sdk/js/39.0/controller.js"></script>
	
	<script type='text/javascript'>
		//-- all pages should have something similar to this - catches uncaught javascript issues.
        window.onerror = function( errMsg, url, lineNumber ){
            console.log( 'uncaught javascript exception found' );
            debugger;
            return( false );
        }
        
        function onCanvasLoad(){
        	console.log( 'oncanvasload' );
        	//debugger;
			
			//-- listen for events sent from the canvas app.
        	Sfdc.canvas.controller.subscribe({ name: "mynamespace.closeDialog", onData: function(e){
        		console.log( 'event recieved' ); debugger;
        		
        		var dataObj = {
    				auraMessageType: "e.force:closeQuickAction",
    				auraMessageData: {}
        		};
        		
        		//-- communicate with the containing lightning experience
        		//-- see the VFContainer.helper for more details
        		
        		//-- refresh and visualforce refresh.
        		//$A.get('e.force:refreshView').fire();
        		var p = new LNE_PostMessage( 'canvasVF', 'saveComplete', true, {} );
        		p.dispatch( window.parent );
        		
        		//$A.get("e.force:closeQuickAction").fire();
        		var p2 = new LNE_PostMessage( 'canvasVF', 'closePopup', true, dataObj );
        		p2.dispatch( window.parent );
        	}});
        };
	</script>
	<apex:canvasApp applicationName="Ticket Scale Import Canvas"
		namespacePrefix="" onCanvasAppLoad="onCanvasLoad"
		height="600px" width="100%"
		parameters="{ eventId:'{! Event__c.Id }' }"
	/>
</apex:page>